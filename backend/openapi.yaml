# for GUI ==> https://app.swaggerhub.com/apis/mohamed.medhat2199/Vividly/1.0.0
openapi: 3.0.0
info:
  description: This is a simple documentation for our backend APIs
  version: '1.0.0'
  title: Vividly
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/mohamed.medhat2199/Vividly/1.0.0
  - url: http://localhost:8080
    description: This is the local development server
  - url: https://vividly-api.herokuapp.com/
    description: This is the remote development server
paths:
  /user/signup:
    post:
      summary: Signup for the interviewer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                companyName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
                phoneCode:
                  type: string
                phoneNumber:
                  type: string
                registrationToken:
                  type: string
      responses:
        '201':
          description: A new user is created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      companyName:
                        type: string
                      email:
                        type: string
                      phoneCode:
                        type: string
                      phoneNumber:
                        type: string
                      loggedIn:
                        type: boolean
                      emailConfirmed:
                        type: boolean
                  token:
                    type: string
                  tokenExpireDate:
                    format: date-time
        '422':
          description: Input validation faild.
        '500':
          description: Server side error.

  /user/confirm-email:
    post:
      summary: Send Email confirmation to the user.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string

      responses:
        '200':
          description: Email confirmation has been sent.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found.
        '500':
          description: Server side error.

  /user/verify/:
    post:
      summary: Confirm user's email in the database.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationCode:
                  type: string
      responses:
        '200':
          description: User's email has been confirmed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Authentecation faild.
        '404':
          description: User not found.
        '500':
          description: Server side error.
  /user/login:
    post:
      summary: Login for an interviewer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                registrationToken:
                  type: string
      responses:
        '200':
          description: Loggedin.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      companyName:
                        type: string
                      email:
                        type: string
                      phoneCode:
                        type: string
                      phoneNumber:
                        type: string
                      loggedIn:
                        type: boolean
                      emailConfirmed:
                        type: boolean
                  token:
                    type: string
                  tokenExpireDate:
                    format: date-time
        '404':
          description: User not found.
        '401':
          description: Authentecation faild.
        '500':
          description: Server side error.

  /user/logout:
    post:
      summary: Logout for an interviewer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registrationToken:
                  type: string
      responses:
        '200':
          description: Loggedout.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Authentecation faild.
        '422':
          description: Validation faild.
        '500':
          description: Server side error.
  /user/{user_id}:
    get:
      summary: Get an interviewer info.
      parameters:
        - name: user_id
          in: path
          required: true
          description: The userId of the target user.
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string

      responses:
        '200':
          description: Get the information successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      companyName:
                        type: string
                      email:
                        type: string
                      phoneCode:
                        type: string
                      phoneNumber:
                        type: string
                      loggedIn:
                        type: boolean
                      emailConfirmed:
                        type: boolean
        '401':
          description: Authentecation faild.
        '404':
          description: User not found.
        '500':
          description: Server side error.

  /user/edit:
    put:
      summary: Edit profile for an interviewer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneCode:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Profile has been edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      companyName:
                        type: string
                      email:
                        type: string
                      phoneCode:
                        type: string
                      phoneNumber:
                        type: string
                      loggedIn:
                        type: boolean
                      emailConfirmed:
                        type: boolean
        '401':
          description: Authentecation faild.
        '404':
          description: User not found.
        '500':
          description: Server side error

  /user/changepassword:
    put:
      summary: Change password for an interviewer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
                newConfirmPassword:
                  type: string
      responses:
        '200':
          description: Password has been changed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Authentecation faild.
        '404':
          description: User not found.
        '500':
          description: Server side error.

  /user/notifications:
    get:
      summary: get user's notifications.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      responses:
        '200':
          description: get all user's notifications.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        notificationId:
                          type: string
                        userId:
                          type: string
                        interviewId:
                          type: string
                        title:
                          type: string
                        body:
                          type: string
                        read:
                          type: boolean
        '401':
          description: Authentecation faild or unconfirmed email.
        '422':
          description: Validation error.
        '500':
          description: Server side error.

  /user/read-notification/{notificationId}:
    post:
      summary: Set notification as read.
      parameters:
        - name: Autorization
          in: header
          required: true
          description: JWT of the authorized user.
          schema:
            type: string
        - name: notificationId
          in: path
          required: true
          description: The id of the notification to be set as read.
          schema:
            type: string
      responses:
        '200':
          description: Notifications have been successfully set as read.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notificationId:
                    type: string
                  userId:
                    type: string
                  interviewId:
                    type: string
                  title:
                    type: string
                  body:
                    type: string
                  read:
                    type: boolean
                  manualRead:
                    type: boolean
        '401':
          description: Authentication failed.
        '404':
          description: Notification not found.
        '500':
          description: Server side error.

  /job-listing/create:
    post:
      summary: Create a job listing.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                positionName:
                  type: string
                expiryDate:
                  format: date-time
                questions:
                  type: array
                  items:
                    type: object
                    properties:
                      statement:
                        type: string
                      timeToThink:
                        type: integer
                      timeToAnswer:
                        type: integer
                      keywords:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: Job listing has been created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobListingId:
                    type: string
                  userId:
                    type: string
                  positionName:
                    type: string
                  expiryDate:
                    format: date-time
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        questionId:
                          type: string
                        statement:
                          type: string
                        timeToThink:
                          type: integer
                        timeToAnswer:
                          type: integer
                        keywords:
                          type: array
                          items:
                            type: string

        '401':
          description: Authentecation faild or unconfirmed email.
        '422':
          description: Validation error.
        '500':
          description: Server side error.

  /job-listing/get-listings:
    get:
      summary: get user's job listings.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      responses:
        '200':
          description: get all the user's listings.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobListings:
                    type: array
                    items:
                      type: object
                      properties:
                        jobListingId:
                          type: string
                        userId:
                          type: string
                        positionName:
                          type: string
                        expiryDate:
                          format: date-time
                        invitationsNumber:
                          type: integer
                        interviewsNumber:
                          type: integer
        '401':
          description: Authentecation faild or unconfirmed email.
        '422':
          description: Validation error.
        '500':
          description: Server side error.

  /job-listing/{listing_id}:
    get:
      summary: get the information of a single listing.
      parameters:
        - name: listing_id
          in: path
          required: true
          description: The id of the target listing.
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      responses:
        '200':
          description: get the listing info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobListingId:
                    type: string
                  userId:
                    type: string
                  positionName:
                    type: string
                  expiryDate:
                    format: date-time
                  invitationsNumber:
                    type: integer
                  interviewsNumber:
                    type: integer
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        questionId:
                          type: string
                        jobListingId:
                          type: string
                        statement:
                          type: string
                        timeToThink:
                          type: integer
                        timeToAnswer:
                          type: integer
                        keywords:
                          type: array
                          items:
                            type: string
                  interviews:
                    type: array
                    items:
                      type: object
                      properties:
                        interviewId:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        phoneCode:
                          type: string
                        phoneNumber:
                          type: string
                        avgRecommendation:
                          type: number
                        avgManualEvaluation:
                          type: number
                        submitedAt:
                          format: date-time

        '401':
          description: Authentecation faild or unconfirmed email.
        '403':
          description: You do not own this listing.
        '404':
          description: Listing not found.
        '500':
          description: Server side error.

  /job-listing/invite:
    post:
      summary: Invite candidates to an interview.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingId:
                  type: string
                candidates:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      phoneCode:
                        type: string
                      phoneNumber:
                        type: string

      responses:
        '200':
          description: Job listing has been created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Authentecation faild or unconfirmed email.
        '404':
          description: Listing not found.
        '422':
          description: Validation error.
        '500':
          description: Server side error.

  /job-listing/answers/{interview_id}:
    get:
      summary: Allow HR to see interview answers.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
        - name: interview_id
          in: path
          required: true
          description: The interview id of a selected candidate.
          schema:
            type: string
      responses:
        '200':
          description: Get the interview answers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  name:
                    type: string
                  phoneCode:
                    type: string
                  phoneNumber:
                    type: string
                  avgScore:
                    type: number
                  avgManualEvaluation:
                    type: number
                  submitedAt:
                    format: date-time
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        statement:
                          type: string
                        link:
                          type: string
                        score:
                          type: number
                        manualEvaluation:
                          type: number
                        openPose:
                          type: number
                        emotions:
                          type: object
                          properties:
                            happy:
                              type: number
                            sad:
                              type: number
                            angry:
                              type: number
                            surprise:
                              type: number
                            neutral:
                              type: number
        '401':
          description: Authentication faild, or email not confirmed.
        '403':
          description: You do not own the listing this interview belongs to.
        '404':
          description: Interview not found.
        '500':
          description: Server side error.

  /job-listing/evaluate/{interview_id}:
    post:
      summary: Allow HR to manual evaluate candidates.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
        - name: interview_id
          in: path
          required: true
          description: The interview id of a selected candidate.
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evaluations:
                  type: array
                  items:
                    type: object
                    properties:
                      questionId:
                        type: string
                      evaluation:
                        type: integer
      responses:
        '200':
          description: Interview evaluated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewId:
                    type: string
                  avgManualEvaluation:
                    type: integer

        '401':
          description: Authentication faild, or email not confirmed.
        '403':
          description: You do not own the listing this interview belongs to.
        '404':
          description: Interview not found.
        '422':
          description: Validation failed.
        '500':
          description: Server side error.

  /job-listing/candidates/{listing_id}:
    get:
      summary: Allow HR to see invited candidates.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
        - name: listing_id
          in: path
          required: true
          description: The listing id.
          schema:
            type: string
      responses:
        '200':
          description: Get the invited candidates.
          content:
            application/json:
              schema:
                type: object
                properties:
                  candidates:
                    type: array
                    items:
                      type: object
                      properties:
                        interviewId:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        phoneCode:
                          type: string
                        phoneNumber:
                          type: string
                        finished:
                          type: boolean
                        submitedAt:
                          type: string
        '401':
          description: Authentication faild, or email not confirmed.
        '403':
          description: You do not own the listing this interview belongs to.
        '404':
          description: Interview not found.
        '500':
          description: Server side error.

  /job-listing//{listing_id}:
    delete:
      summary: Allow HR to delete listing.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: jwt of the loggedin user.
          schema:
            type: string
        - name: listing_id
          in: path
          required: true
          description: The listing id of the position to delete.
          schema:
            type: string
      responses:
        '200':
          description: Listing deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

        '401':
          description: Authentication faild, or email not confirmed.
        '403':
          description: You do not own the listing this interview belongs to.
        '404':
          description: Interview not found.
        '500':
          description: Server side error.

  /candidate/join/{invitation_code}:
    get:
      summary: Allow candidate to join interview.
      parameters:
        - name: invitation_code
          in: path
          required: true
          description: The invitation code that has been sent to the candidate.
          schema:
            type: string
      responses:
        '200':
          description: Get the interview info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  interviewId:
                    type: string
                  jobListingId:
                    type: string
                  positionName:
                    type: string
                  email:
                    type: string
                  name:
                    type: string
                  phoneCode:
                    type: string
                  phoneNumber:
                    type: string
                  questions:
                    type: array
                    items:
                      type: object
                      properties:
                        questionId:
                          type: string
                        statement:
                          type: string
                        timeToThink:
                          type: integer
                        timeToAnswer:
                          type: integer
        '403':
          description: This interview has been started before.
        '500':
          description: Server side error.

  /candidate/upload-video:
    post:
      summary: Upload video answer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interviewId:
                  type: string
                questionId:
                  type: string
                video:
                  type: string
                lastVideo:
                  type: boolean
      responses:
        '200':
          description: The answers are saved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: The interview has been submited before.
        '500':
          description: Server side error.
